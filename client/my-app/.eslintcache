[{"C:\\Users\\jonat\\todo-full-stack\\client\\my-app\\src\\index.tsx":"1","C:\\Users\\jonat\\todo-full-stack\\client\\my-app\\src\\routes\\Home.tsx":"2","C:\\Users\\jonat\\todo-full-stack\\client\\my-app\\src\\App.tsx":"3","C:\\Users\\jonat\\todo-full-stack\\client\\my-app\\src\\reportWebVitals.ts":"4","C:\\Users\\jonat\\todo-full-stack\\client\\my-app\\src\\components\\TodoList.tsx":"5","C:\\Users\\jonat\\todo-full-stack\\client\\my-app\\src\\contexts\\TodosContext.tsx":"6","C:\\Users\\jonat\\todo-full-stack\\client\\my-app\\src\\components\\AddTodo.tsx":"7","C:\\Users\\jonat\\todo-full-stack\\client\\my-app\\src\\routes\\UpdateTodos.tsx":"8","C:\\Users\\jonat\\todo-full-stack\\client\\my-app\\src\\components\\UpdateTodo.tsx":"9"},{"size":200,"mtime":1611237572889,"results":"10","hashOfConfig":"11"},{"size":395,"mtime":1611242103058,"results":"12","hashOfConfig":"11"},{"size":760,"mtime":1611247547396,"results":"13","hashOfConfig":"11"},{"size":425,"mtime":1611228302152,"results":"14","hashOfConfig":"11"},{"size":3278,"mtime":1611247509769,"results":"15","hashOfConfig":"11"},{"size":907,"mtime":1611240257858,"results":"16","hashOfConfig":"11"},{"size":1732,"mtime":1611248853972,"results":"17","hashOfConfig":"11"},{"size":338,"mtime":1611247981223,"results":"18","hashOfConfig":"11"},{"size":2029,"mtime":1611248671246,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zrr7pv",{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\jonat\\todo-full-stack\\client\\my-app\\src\\index.tsx",[],"C:\\Users\\jonat\\todo-full-stack\\client\\my-app\\src\\routes\\Home.tsx",["40"],"C:\\Users\\jonat\\todo-full-stack\\client\\my-app\\src\\App.tsx",[],"C:\\Users\\jonat\\todo-full-stack\\client\\my-app\\src\\reportWebVitals.ts",[],"C:\\Users\\jonat\\todo-full-stack\\client\\my-app\\src\\components\\TodoList.tsx",["41","42","43"],"import React, { useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { TodosContext } from \"../contexts/TodosContext\";\r\n\r\ninterface TodoListProps {}\r\n\r\nexport const TodoList: React.FC<TodoListProps> = ({}) => {\r\n  const { todos, setTodos } = useContext(TodosContext);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      try {\r\n        const response = await fetch(\"http://localhost:4001/api/v1/todos\");\r\n        const jsonData = await response.json();\r\n        setTodos(jsonData.data.todos);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const handleDelete = async (e: any, id: number) => {\r\n    e.stopPropagation();\r\n    try {\r\n      const response = await fetch(`http://localhost:4001/api/v1/todos/${id}`, {\r\n        method: \"DELETE\",\r\n      });\r\n      setTodos(\r\n        todos.filter((todo: any) => {\r\n          return todo.id !== id;\r\n        })\r\n      );\r\n    } catch (err) {}\r\n  };\r\n\r\n  const handleUpdate = async (e: any, id: number) => {\r\n    e.stopPropagation();\r\n    history.push(`/todos/${id}/update`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"md:px-32 py-8 w-full\">\r\n      <div className=\"shadow overflow-hidden rounded border-b border-gray-200\">\r\n        <table className=\"min-w-full bg-white\">\r\n          <thead className=\"bg-gray-800 text-white text-center\">\r\n            <tr>\r\n              <th className=\"w-1/3 text-left py-3 px-4 uppercase font-semibold text-m text-center\">\r\n                Task\r\n              </th>\r\n              <th className=\"w-1/3 text-left py-3 px-4 uppercase font-semibold text-m text-center\">\r\n                Edit\r\n              </th>\r\n              <th className=\"text-left py-3 px-4 uppercase font-semibold text-m text-center\">\r\n                Delete\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"text-gray-700\">\r\n            {todos &&\r\n              todos.map((todo: any) => {\r\n                return (\r\n                  <tr key={todo.id}>\r\n                    <td className=\"px-4\">{todo.todo}</td>\r\n                    <td className=\"text-center\">\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={(e) => handleUpdate(e, todo.id)}\r\n                        className=\"border border-yello-500 bg-yellow-500 text-white rounded-md px-4 py-2 m-2 transition duration-500 ease select-none hover:bg-yellow-600 focus:outline-none focus:shadow-outline\"\r\n                      >\r\n                        Update\r\n                      </button>{\" \"}\r\n                    </td>\r\n                    <td className=\"text-center\">\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"border border-red-500 bg-red-500 text-white rounded-md px-4 py-2 m-2 transition duration-500 ease select-none hover:bg-red-600 focus:outline-none focus:shadow-outline\"\r\n                        onClick={(e) => handleDelete(e, todo.id)}\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\jonat\\todo-full-stack\\client\\my-app\\src\\contexts\\TodosContext.tsx",[],"C:\\Users\\jonat\\todo-full-stack\\client\\my-app\\src\\components\\AddTodo.tsx",["44","45"],"C:\\Users\\jonat\\todo-full-stack\\client\\my-app\\src\\routes\\UpdateTodos.tsx",["46"],"import React from \"react\";\r\nimport { UpdateTodo } from \"../components/UpdateTodo\";\r\n\r\ninterface UpdateTodosProps {}\r\n\r\nexport const UpdateTodos: React.FC<UpdateTodosProps> = ({}) => {\r\n  return (\r\n    <div className=\"w-full\">\r\n      <h1 className=\"text-4xl mt-4 text-center \">Update Todo</h1>\r\n      <UpdateTodo />\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\jonat\\todo-full-stack\\client\\my-app\\src\\components\\UpdateTodo.tsx",["47","48","49","50","51"],{"ruleId":"52","severity":1,"message":"53","line":7,"column":43,"nodeType":"54","messageId":"55","endLine":7,"endColumn":45},{"ruleId":"52","severity":1,"message":"53","line":7,"column":51,"nodeType":"54","messageId":"55","endLine":7,"endColumn":53},{"ruleId":"56","severity":1,"message":"57","line":21,"column":6,"nodeType":"58","endLine":21,"endColumn":8,"suggestions":"59"},{"ruleId":"60","severity":1,"message":"61","line":26,"column":13,"nodeType":"62","messageId":"63","endLine":26,"endColumn":21},{"ruleId":"60","severity":1,"message":"64","line":2,"column":10,"nodeType":"62","messageId":"63","endLine":2,"endColumn":20},{"ruleId":"52","severity":1,"message":"53","line":7,"column":49,"nodeType":"54","messageId":"55","endLine":7,"endColumn":51},{"ruleId":"52","severity":1,"message":"53","line":6,"column":57,"nodeType":"54","messageId":"55","endLine":6,"endColumn":59},{"ruleId":"60","severity":1,"message":"65","line":1,"column":38,"nodeType":"62","messageId":"63","endLine":1,"endColumn":48},{"ruleId":"60","severity":1,"message":"66","line":3,"column":10,"nodeType":"62","messageId":"63","endLine":3,"endColumn":22},{"ruleId":"52","severity":1,"message":"53","line":7,"column":55,"nodeType":"54","messageId":"55","endLine":7,"endColumn":57},{"ruleId":"56","severity":1,"message":"67","line":24,"column":6,"nodeType":"58","endLine":24,"endColumn":8,"suggestions":"68"},{"ruleId":"60","severity":1,"message":"61","line":29,"column":13,"nodeType":"62","messageId":"63","endLine":29,"endColumn":21},"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setTodos'. Either include it or remove the dependency array.","ArrayExpression",["69"],"@typescript-eslint/no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'useContext' is defined but never used.","'TodosContext' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["70"],{"desc":"71","fix":"72"},{"desc":"73","fix":"74"},"Update the dependencies array to be: [setTodos]",{"range":"75","text":"76"},"Update the dependencies array to be: [id]",{"range":"77","text":"78"},[646,648],"[setTodos]",[739,741],"[id]"]