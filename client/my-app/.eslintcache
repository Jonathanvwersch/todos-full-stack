[{"C:\\Users\\jonat\\todo-full-stack\\client\\my-app\\src\\index.tsx":"1","C:\\Users\\jonat\\todo-full-stack\\client\\my-app\\src\\routes\\Home.tsx":"2","C:\\Users\\jonat\\todo-full-stack\\client\\my-app\\src\\App.tsx":"3","C:\\Users\\jonat\\todo-full-stack\\client\\my-app\\src\\reportWebVitals.ts":"4","C:\\Users\\jonat\\todo-full-stack\\client\\my-app\\src\\components\\TodoList.tsx":"5","C:\\Users\\jonat\\todo-full-stack\\client\\my-app\\src\\contexts\\TodosContext.tsx":"6"},{"size":200,"mtime":1611237572889,"results":"7","hashOfConfig":"8"},{"size":326,"mtime":1611239482632,"results":"9","hashOfConfig":"8"},{"size":753,"mtime":1611240409332,"results":"10","hashOfConfig":"8"},{"size":425,"mtime":1611228302152,"results":"11","hashOfConfig":"8"},{"size":2562,"mtime":1611241195839,"results":"12","hashOfConfig":"8"},{"size":907,"mtime":1611240257858,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zrr7pv",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jonat\\todo-full-stack\\client\\my-app\\src\\index.tsx",[],"C:\\Users\\jonat\\todo-full-stack\\client\\my-app\\src\\routes\\Home.tsx",["27"],"C:\\Users\\jonat\\todo-full-stack\\client\\my-app\\src\\App.tsx",[],"C:\\Users\\jonat\\todo-full-stack\\client\\my-app\\src\\reportWebVitals.ts",[],"C:\\Users\\jonat\\todo-full-stack\\client\\my-app\\src\\components\\TodoList.tsx",["28","29"],"import React, { useEffect, useContext } from \"react\";\r\nimport { TodosContext } from \"../contexts/TodosContext\";\r\n\r\ninterface TodoListProps {}\r\n\r\nexport const TodoList: React.FC<TodoListProps> = ({}) => {\r\n  const { todos, setTodos } = useContext(TodosContext);\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      try {\r\n        const response = await fetch(\"http://localhost:4001/api/v1/todos\");\r\n        const jsonData = await response.json();\r\n        setTodos(jsonData.data.todos);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"md:px-32 py-8 w-full\">\r\n      <div className=\"shadow overflow-hidden rounded border-b border-gray-200\">\r\n        <table className=\"min-w-full bg-white\">\r\n          <thead className=\"bg-gray-800 text-white text-center\">\r\n            <tr>\r\n              <th className=\"w-1/3 text-left py-3 px-4 uppercase font-semibold text-m text-center\">\r\n                Task\r\n              </th>\r\n              <th className=\"w-1/3 text-left py-3 px-4 uppercase font-semibold text-m text-center\">\r\n                Edit\r\n              </th>\r\n              <th className=\"text-left py-3 px-4 uppercase font-semibold text-m text-center\">\r\n                Delete\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"text-gray-700\">\r\n            {todos &&\r\n              todos.map((todo: any) => {\r\n                return (\r\n                  <tr>\r\n                    <td className=\"px-4\">{todo.todo}</td>\r\n                    <td className=\"text-center\">\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"border border-yello-500 bg-yellow-500 text-white rounded-md px-4 py-2 m-2 transition duration-500 ease select-none hover:bg-yellow-600 focus:outline-none focus:shadow-outline\"\r\n                      >\r\n                        Update\r\n                      </button>{\" \"}\r\n                    </td>\r\n                    <td className=\"text-center\">\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"border border-red-500 bg-red-500 text-white rounded-md px-4 py-2 m-2 transition duration-500 ease select-none hover:bg-red-600 focus:outline-none focus:shadow-outline\"\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\jonat\\todo-full-stack\\client\\my-app\\src\\contexts\\TodosContext.tsx",[],{"ruleId":"30","severity":1,"message":"31","line":6,"column":43,"nodeType":"32","messageId":"33","endLine":6,"endColumn":45},{"ruleId":"30","severity":1,"message":"31","line":6,"column":51,"nodeType":"32","messageId":"33","endLine":6,"endColumn":53},{"ruleId":"34","severity":1,"message":"35","line":19,"column":6,"nodeType":"36","endLine":19,"endColumn":8,"suggestions":"37"},"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setTodos'. Either include it or remove the dependency array.","ArrayExpression",["38"],{"desc":"39","fix":"40"},"Update the dependencies array to be: [setTodos]",{"range":"41","text":"42"},[565,567],"[setTodos]"]